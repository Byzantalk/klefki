:mod:`klefki.algebra.rings`
===========================

.. py:module:: klefki.algebra.rings


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   klefki.algebra.rings.PolyRing



.. py:class:: PolyRing(*args)

   Bases: :class:`klefki.algebra.abstract.Ring`

   A Transformer, is a Object implemented  methods like
   `from_int`, `from_list`, `from_SomeType`.

   .. method:: from_list(self, o)


   .. method:: from_tuple(self, o)


   .. method:: degree(self)
      :property:


   .. method:: op(self, rhs: Ring)

      The Operator for obeying axiom `associativity` (2)


   .. method:: inverse(self)

      Implement for axiom `inverse`


   .. method:: sec_op(self, rhs: Ring)

      The Operator for obeying axiom `associativity` (2)


   .. method:: div(self, rhs: Ring)


   .. method:: identity(cls)
      :classmethod:

      The value for obeying axiom `identity` (3)


   .. method:: __floordiv__(self, rhs: Ring)


   .. method:: singleton(cls, point_loc, height, total_pts)
      :classmethod:


   .. method:: lagrange_interp(cls, vec)
      :classmethod:


   .. method:: __call__(self, x)



